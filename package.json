{
	"name": "pico",
	"version": "0.9.40512",
	"description": "pico",
	"scripts": {
		"@Usage:@": [
			"@                                                                              @",
			"@ npm run build                                                                @",
			"@                                                                              @",
			"@   Build pico.js from src/*.js to current directory.                          @",
			"@                                                                              @",
			"@ npm run build --out=<output-dir>                                             @",
			"@              [--main=<main-app> --sub=<sub-app1>,<sub-app2>,...]             @",
			"@                                                                              @",
			"@   1. Build pico.js from src/*.js to current directory.                       @",
			"@   2. Copy pico.js/css, index.html/js to <output-dir>.                        @",
			"@   3. Copy <main-app>.js to <output-dir>/app.js.                              @",
			"@   4. Copy <sub-apps>.js to <output-dir>/<sub-apps>.js.                       @",
			"@                                                                              @",
			"@   Example: npm run build --main=app/dice --sub=app/edit --out=../build/dice  @",
			"@                                                                              @",
			"@ npm run clean --out=<target-dir>                                             @",
			"@              [--sub=<sub-app1>,<sub-app2>,...]                               @",
			"@                                                                              @",
			"@   1. Delete pico.js/css, index.html/js from <target-dir>.                    @",
			"@   2. Delete app.js, <sub-apps>.js from <target-dir>.                         @",
			"@                                                                              @",
			"@   Example: npm run clean --main=app/dice --sub=app/edit --out=../build/dice  @",
			"@                                                                              @"],
		"usage": "sed -n \"s#.*\\\"@\\(.*\\)@\\\".*#\\1#p\" package.json",

		"build:lib": "find src -name \"*.js\" | sort | xargs cat > ./pico.js; sed -i '' \"s#pico.name *= *\".*\" *;#pico.name = \\\"${npm_package_name}\\\";#\" pico.js; sed -i '' \"s#pico.version *= *\".*\" *;#pico.version = \\\"${npm_package_version}\\\";#\" pico.js; sed -i '' \"s#\\(console.log.*;\\)#//\\1#g\" pico.js",
		"build:out": "if [ -n \"${npm_config_out}\" ]; then mkdir -p ${npm_config_out}; cp pico.* index.* ${npm_config_out}; fi",
		"build:app": "if [ -n \"${npm_config_out}\" ] && [ -n \"${npm_config_main}\" ]; then for app in ${npm_config_main}.js*; do cp $app ${npm_config_out}/app.${app##*.}; done; fi",
		"build:sub": "if [ -n \"${npm_config_out}\" ] && [ -n \"${npm_config_sub}\" ]; then for sub in ${npm_config_sub//,/ }; do mkdir -p ${npm_config_out}/${sub%/*}; cp $sub.js ${npm_config_out}/${sub%/*}/; done; fi;",
		"build": "npm run build:lib; npm run build:out; npm run build:app; npm run build:sub",

		"clean:sub": "if [ -n \"${npm_config_out}\" ] && [ -n \"${npm_config_sub}\" ]; then for sub in ${npm_config_sub//,/ }; do rm ${npm_config_out}/$sub.js; done; fi",
		"clean:out": "if [ -n \"${npm_config_out}\" ]; then rm ${npm_config_out}/pico.*; rm ${npm_config_out}/index.*; rm ${npm_config_out}/app.js*; rm -r ${npm_config_out}; fi",
		"clean": "npm run clean:sub; npm run clean:out",

		"clobber": "rm -rf node_modules; rm -rf package-lock.json",

		"install": "",
		"update": ""
	},
	"license": "unlicensed",
	"private": true
}
